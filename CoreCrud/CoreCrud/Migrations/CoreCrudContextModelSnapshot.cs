// <auto-generated />
using System;
using CoreCrud.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoreCrud.Migrations
{
    [DbContext(typeof(CoreCrudContext))]
    partial class CoreCrudContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoreCrud.Models.Country", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Continent");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("CoreCrud.Models.Destination", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryID");

                    b.Property<string>("FamousPlace");

                    b.Property<DateTime>("From");

                    b.Property<bool>("LongVacationDestination");

                    b.Property<string>("Name");

                    b.Property<decimal>("PricePerPerson");

                    b.Property<DateTime>("To");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.ToTable("Destination");
                });

            modelBuilder.Entity("CoreCrud.Models.Destination", b =>
                {
                    b.HasOne("CoreCrud.Models.Country", "Country")
                        .WithMany("Destinations")
                        .HasForeignKey("CountryID");
                });
#pragma warning restore 612, 618
        }
    }
}
